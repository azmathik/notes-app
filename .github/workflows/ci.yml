name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Compile code
        run: |
          ./mvnw clean compile
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Unit test
        run: |
          ./mvnw clean test
  build:
    runs-on: ubuntu-latest
    name: Build application
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Compiling the project
        run: ./mvnw clean compile

  build-and-push-image:
    name: Build & Push Docker Hub
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Building the project
        run: ./mvnw clean install
      - name: Build & push the image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: azmathikram/notes-app
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
